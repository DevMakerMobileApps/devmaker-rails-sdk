class Admin::<%= model_name.pluralize.camelize %>Controller < AdminController
  before_action :set_<%= name_downcase.singularize %>, only: [:show, :edit, :update, :destroy]


  def index
    @<%= name_downcase.pluralize %> = <%= model_name %>.order(id: :desc).search_for(params[:q]).page(current_page)
  end

  def new
    @<%= name_downcase.singularize %> = <%= model_name %>.new
    @<%= name_downcase.singularize %>.build_user
  end

  def create
    @<%= name_downcase.singularize %> = <%= model_name %>.new(form_params)

    if @<%= name_downcase.singularize %>.save
      redirect_to admin_<%= name_downcase.pluralize %>_path
    else
      render :new
    end
  end

  def show
  end

  def edit
  end

  def update
    params = form_params.to_h
    if @<%= name_downcase.singularize %>.update(params)
      redirect_to admin_<%= name_downcase.pluralize %>_path
    else
      render :edit
    end
  end

  def destroy
    @<%= name_downcase.singularize %>.destroy
    flash[:success] = "<%= model_name %> removido."
    redirect_to admin_<%= name_downcase.pluralize %>_path
  end

  private

  def form_params
    params.require(:<%= name_downcase.singularize %>).permit([<%= params.map { |name| ":#{name.split(":")[0] }" }.join(', ') %><%= ',' if params.present?%>
      user_attributes: [
      :id,
      :email,
      :password,
      :password_confirmation,
      ],
    ])
  end

  def set_<%= name_downcase.singularize %>
    @<%= name_downcase.singularize %> = <%= model_name %>.find(params[:id])
  end
end
